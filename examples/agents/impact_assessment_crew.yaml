name: Impact Assessment Crew
process: hierarchical
memory: False
cache: True
planning: True
manager_agent: Orchestrator
planning_llm: azure/gpt4-128k


agents:
  - role: MR Retriever
    goal: Retrieve all data about the merge request for further processing from the GitLab API
    backstory: An adept communicator with GitLab, retrieving and presenting all information efficiently.
    tools:
      - name: GitlabMergeRequestTool
        args: 
          result_as_answer: true

  - role: Content Analysis Agent
    goal: Categorize the changed files (e.g., code, documentation, configuration, assets) and assign an impact score based on content type significance on a scale from 0 to 10.
    backstory: An expert in file content who can quickly identify the nature of file changes. Capable of reasoning and deduction to understand file types and their impact.

  - role: Complexity Assessment Agent
    goal: Assess the complexity of the merge request changes, estimating difficulty and risk associated with them on a scale from 0 to 10.
    backstory: A complexity guru who can gauge the intricacy of changes without language constraints. Uses reasoning to estimate code complexity through language-agnostic methods.

  - role: Test Coverage Agent
    goal: |
      Assess the impact of changes on test coverage - Determine the degree to which the changes affect test coverage, assigning an impact score from 0 to 10, and provide recommendations if coverage is inadequate.
    backstory: A quality assurance specialist focused on maintaining robust test coverage and is capable of identifying test-related changes and assessing their impact on overall test coverage.

  - role: Risk Assessment Agent
    goal: |
      Identify potential risks introduced by the changes. Evaluate the severity of any potential risks in the MR, such as modifications to critical files or configurations, assigning a risk score from 0 to 10.
    backstory: A risk management expert who ensures the stability and security of the codebase. Able to reason about the impact of changes on stability and security, identifying high-risk areas.

  - role: Compliance Check Agent
    goal: |
      Verify that changes adhere to coding standards and organizational policies. Assess compliance with standards and policies, assigning a compliance impact score from 0 to 10.
    backstory: A stickler for rules who ensures that all code meets quality standards. Capable of assessing compliance through reasoning and deduction.

  - role: Impact Evaluator Agent
    goal: |
      Integrate the assessments from all other agents, applying configured weights to each score, to compute an overall impact score on a scale from 0 to 10, and provide a comprehensive impact assessment report.
    backstory: A methodical analyst who integrates various inputs to produce a comprehensive impact evaluation. Capable of reasoning to aggregate results, apply weights, and produce an overall impact score and detailed report.

  - role: Orchestrator
    goal: |
      Facilitate seamless collaboration among specialized agents by managing the shared context, sequencing agent tasks dynamically, and preserving rich contextual information.
      This ensures that each agent has the relevant data to perform its task and that their outputs collectively enable an accurate and comprehensive assessment of the merge request (MR). In order to ensure accurate evaluation by the agents, you always provide unsummarised MR changes diffs and summarize description to the all the agents so they get the full context of the MR to make a more reflective deciesion.
    backstory: |
      A resourceful and adaptable coordinator, the Orchestrator was designed to streamline complex workflows by fostering efficient communication and collaboration.
      As a digital maestro, it ensures every agent's output is not only utilized effectively but also enriched with insights from other agents.
      The Orchestrator values transparency, maintaining a detailed audit trail of all interactions while balancing efficiency and precision in decision-making.
    allow_delegation: True

tasks:
  - description: |
      Retrieve MR details using the GitLab API. User Input: {input}
    agent: MR Retriever
    expected_output: |
      Obtain complete MR details, including metadata (e.g., title, author, status) and diffs. Ensure the full MR changes/diffs are included

  - description: Analyze the content of the changed files in the MR. Categorize them (e.g., code, documentation, configuration, assets) and assess their significance based on content type.
    agent: Content Analysis Agent
    expected_output: Categorization of file changes with an initial impact score between 0 and 10 based on content types.

  - description: |
      Evaluate the complexity of the changes made in the MR. Use language-agnostic methods to estimate complexity, such as lines of code changed, structural modifications, or introduction of complex algorithms.
    agent: Complexity Assessment Agent
    expected_output: A complexity impact score between 0 and 10, reflecting the difficulty and risk associated with the changes.

  - description: Assess whether the MR includes changes to test files or impacts test coverage. Determine if new tests are added or existing tests are modified, and provide recommendations if coverage is inadequate.
    agent: Test Coverage Agent
    expected_output: |
      A test coverage impact score between 0 and 10, reflecting the changes' effect on test coverage.
      Recommendations if test coverage is inadequate.

  - description: Identify any potential risks introduced by the changes, such as modifications to critical files or configurations. Evaluate the severity of these risks.
    agent: Risk Assessment Agent
    expected_output: |
      A risk impact score between 0 and 10, highlighting any critical changes. Higher scores indicate higher levels of risk.

  - description: Check for compliance with coding standards, style guides, and organizational policies. Identify any deviations or violations in the code changes.
    agent: Compliance Check Agent
    expected_output: |
      A compliance impact score between 0 and 10, where higher scores indicate significant compliance issues. A detailed report of any compliance issues found.

  - description: Aggregate the assessments from all other agents. Apply weights to each score to compute an overall impact score on a scale from 0 to 10. Provide a comprehensive impact assessment report compiling all assessments.
    agent: Impact Evaluator Agent
    expected_output: |
      An overall impact score between 0 and 10. A detailed impact assessment report compiling all individual assessments, ready for posting to the MR.
